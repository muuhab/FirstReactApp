[{"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\reportWebVitals.js":"1","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\index.js":"2","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\App.js":"3","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\DishDetailComponent.js":"5","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\MainComponent.js":"6","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\HeaderComponent.js":"7","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\HomeComponent.js":"9","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\ContactComponent.js":"10","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\AboutComponent.js":"11","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\configureStore.js":"12","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\dishes.js":"13","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\promotions.js":"14","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\leaders.js":"15","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\comments.js":"16","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\ActionCreators.js":"17","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\ActionTypes.js":"18","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\LoadingComponent.js":"19","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\forms.js":"20","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\shared\\baseUrl.js":"21","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\shared\\leaders.js":"22"},{"size":362,"mtime":1610959835829,"results":"23","hashOfConfig":"24"},{"size":643,"mtime":1611230318890,"results":"25","hashOfConfig":"24"},{"size":527,"mtime":1613076375813,"results":"26","hashOfConfig":"24"},{"size":2292,"mtime":1618588632315,"results":"27","hashOfConfig":"24"},{"size":8103,"mtime":1618670653822,"results":"28","hashOfConfig":"24"},{"size":3842,"mtime":1618748198024,"results":"29","hashOfConfig":"24"},{"size":4762,"mtime":1612912887202,"results":"30","hashOfConfig":"24"},{"size":2636,"mtime":1611242140778,"results":"31","hashOfConfig":"24"},{"size":1905,"mtime":1618665163335,"results":"32","hashOfConfig":"24"},{"size":10915,"mtime":1618674984681,"results":"33","hashOfConfig":"24"},{"size":4446,"mtime":1618748146956,"results":"34","hashOfConfig":"24"},{"size":770,"mtime":1618675184360,"results":"35","hashOfConfig":"24"},{"size":598,"mtime":1618484081835,"results":"36","hashOfConfig":"24"},{"size":683,"mtime":1618588492099,"results":"37","hashOfConfig":"24"},{"size":674,"mtime":1618664760488,"results":"38","hashOfConfig":"24"},{"size":569,"mtime":1618596402345,"results":"39","hashOfConfig":"24"},{"size":6251,"mtime":1618675150983,"results":"40","hashOfConfig":"24"},{"size":556,"mtime":1618675048025,"results":"41","hashOfConfig":"24"},{"size":256,"mtime":1618485493775,"results":"42","hashOfConfig":"24"},{"size":170,"mtime":1618495538896,"results":"43","hashOfConfig":"24"},{"size":48,"mtime":1618588362524,"results":"44","hashOfConfig":"24"},{"size":2382,"mtime":1611509975689,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"15ohqy7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\reportWebVitals.js",[],["94","95"],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\index.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\App.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\DishDetailComponent.js",["96","97","98"],"import React,{Component} from 'react';\r\nimport {Card,CardImg,CardText,CardBody,CardTitle,Breadcrumb, BreadcrumbItem,Label,Button,Modal,ModalBody,ModalHeader} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass Comment extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen:false\r\n        }\r\n        this.toggleModal=this.toggleModal.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span>Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" id=\"rating\"\r\n                                        className=\"form-control\" defaultValue=\"1\" >\r\n                                        <option >1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                             minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                          <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"message\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"message\" name=\"message\"\r\n                                        divs=\"6\"\r\n                                        className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                    <Button type=\"submit\" value=\"Submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                            </div>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n    function RenderDish({dish}){\r\n        if(dish!=null){\r\n            return(\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image}/>\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    function RenderComments({comments,postComment,dishId}){\r\n        if(comments!=null){\r\n            const com=comments.map((comment)=>{return(\r\n                <Fade in>\r\n                <div key={comment.id}>\r\n    \r\n                \r\n                <ul className=\"list-unstyled\">\r\n                         <li>\r\n                        {comment.comment}\r\n                    </li>\r\n                    <li>\r\n                        -- {comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                    </li>\r\n                </ul>\r\n                </div>\r\n                </Fade>\r\n\r\n            );\r\n        });\r\n        return(\r\n            <div >\r\n                <h4>Comments</h4>\r\n                <Stagger in>\r\n                {com}\r\n            </Stagger>\r\n                <Comment dishId={dishId} postComment={postComment} />\r\n\r\n            </div>\r\n\r\n        );\r\n        }\r\n        else{\r\n            return(<div></div>);\r\n        }\r\n     \r\n       \r\n    }\r\n        const DishDetail=(props)=>{\r\n            if (props.isLoading) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">            \r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.errMess) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">            \r\n                            <h4>{props.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.dish != null) \r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <Breadcrumb>\r\n\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n        \r\n                    <RenderDish dish={props.dish}/>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                        \r\n                    \r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} /> \r\n                        </div>\r\n                </div>\r\n                </div>\r\n                );\r\n        \r\n    \r\n    \r\n        }\r\n        \r\nexport default DishDetail","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\ContactComponent.js",["99","100","101","102","103","104","105"],"import React,{Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem,Col,Label,Button,Row} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values){\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        // this.props.resetFeedbackForm();\r\n    }\r\n    \r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n    \r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>               \r\n                        </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">Send Your FeedBack</div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\"  onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                          <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form >\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\shared\\baseUrl.js",[],"C:\\Users\\Muhab\\OneDrive\\Documents\\Git-Test\\React\\confusion\\src\\shared\\leaders.js",[],["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":42,"column":37,"nodeType":"114","endLine":43,"endColumn":84},{"ruleId":"112","severity":1,"message":"115","line":53,"column":37,"nodeType":"114","endLine":59,"endColumn":44},{"ruleId":"112","severity":1,"message":"116","line":72,"column":37,"nodeType":"114","endLine":74,"endColumn":68},{"ruleId":"112","severity":1,"message":"115","line":71,"column":37,"nodeType":"114","endLine":77,"endColumn":44},{"ruleId":"112","severity":1,"message":"115","line":93,"column":37,"nodeType":"114","endLine":99,"endColumn":44},{"ruleId":"112","severity":1,"message":"115","line":115,"column":37,"nodeType":"114","endLine":121,"endColumn":44},{"ruleId":"112","severity":1,"message":"115","line":138,"column":37,"nodeType":"114","endLine":143,"endColumn":46},{"ruleId":"112","severity":1,"message":"117","line":159,"column":45,"nodeType":"114","endLine":161,"endColumn":52},{"ruleId":"112","severity":1,"message":"113","line":167,"column":37,"nodeType":"114","endLine":168,"endColumn":66},{"ruleId":"112","severity":1,"message":"116","line":177,"column":37,"nodeType":"114","endLine":179,"endColumn":68},{"ruleId":"108","replacedBy":"118"},{"ruleId":"110","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["120"],["121"],"no-global-assign","no-unsafe-negation"]